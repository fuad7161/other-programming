#include <bits/stdc++.h>
using namespace std;

#define int long long

vector<int> singleNumber(){
    int n;
    cin>>n;
    vector<int> a(n);
    for(int &i: a)cin>>i;
    int result = 0;

    for(int i: a){
        result ^= i;
    }

    // left most set bit of a number
    int mask = result & ~(result-1);

    int x = 0;
    int y = 0;

    for(int i: a){
        if((i & mask) > 0){
            x ^= i;
        }
    }

    // error(result , x)
    y = result^x;
    return {x,y};

//input
/*
10
1 1 2 5 3 2 3 4 7 4
*/
}

char uppertoLower(char ch){
    // char ch ;
    // cin>>ch;
    return char(ch | ' ');
}

char lowerctoUpper(char ch){
    // char ch;
    // cin>>ch;

    return char(ch & '_');
}

char invertcase(char ch){
    return (char(ch ^ ' '));
}

int find_alphabetical_position(char ch){
    return (int)(ch&31);
}

int getOddOccurrence(vector<int> &a){
    int res = 0;
    for(auto i: a){
        res ^= i;
    }
    return res;
}

void bitSwap(int &a,int &b){
    a = a ^ b;
    b = a ^ b;
    a = a ^ b;
}

int xor_from_1_to_n(int n){
    int ex = n%4;
    if(ex == 0)return n;
    if(ex == 1)return 1;
    if(ex == 2)return n+1;
    if(ex == 3)return 0;
    return -1;
}

int swapBit(int n , int i, int j){
    int a = (n >> (i-1) & 1);
    int b = (n >> (j-1) & 1);
    int tem = a^b;
    n = n ^ (tem << (i-1));
    n = n ^ (tem << (j-1));
    return n;
}

signed solve(){

{    
    /*
    find single number 2 number form an array.
    vector<int>ans = singleNumber();
    for(auto i: ans){
        cout<<i<<" ";
    }cout<<endl;

    convert upper case to lower case
    uppertoLower();

    convert lower case to upper case
    lowerctoUpper();

    invert the case
    char ch;
    cin>>ch;
    cout<<invertcase(ch)<<endl;

    find letter position in alphabet
    find_alphabetical_position() 

    getOddOccurrence 
    vector<int> a = {1,2,3,4,5,4,3,2,1};
    int odd = getOddOccurrence(a);
    cout<<odd<<endl;   
    
    //swap two element using Bit manipulation
    int a = 5;
    int b = 7;
    bitSwap(a,b);
    cout<<a<<" "<<b<<endl;
    
    
    // calculate XOR from 1 to n
    int n;
    cin>>n;
    int xorr = xor_from_1_to_n(n);
    cout<<xorr<<endl;

    // xor of all the subset of an array is zero except for n == 1

    */}

    /*

    swap i and j th bit of a number;
    int n , i , j;
    cin>>n >> i>> j;
    int sn = swapBit(n,i,j);
    cout<<sn<<endl;

    */

    
    

    return 0;
}
signed main(){
    ios::sync_with_stdio(false);cin.tie(0);int test = 1;
    // cin>>test;
    while (test--)solve();return 0;
}
