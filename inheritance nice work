/*
Author: Fuadul Hasan(fuadul202@gmail.com)
BSMRSTU,Gopalganj
*/
//#include<bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <unordered_map>
#include <queue>
#include <ctime>
#include <cassert>
#include <complex>
#include <string>
#include <cstring>
#include <chrono>
#include <random>
#include <queue>
#include <bitset>
using namespace std;
 
 
int         cinn()              {int x; scanf("%d", &x); return x;}
long long   scll()              {long long x; scanf("%lld", &x); return x;}
double      scd()               {double x; scanf("%lf", &x); return x;}
void        coutt(int x)        {printf("%d ", x);}
void        coutc(string s)     {printf("%s\n",s );}
 
#define  scll                   scll()
#define  gcd(a,b)               __gcd(a,b)
#define  lcm(a,b)               (a*b)/gcd(a,b)
#define  PI                     acos(-1.0)
#define  vi                     std::vector<int>
#define  vll                    std::vector<ll>
#define  vit                    vector<int> :: iterator
#define  sit                    set<int> :: iterator
#define  mpsi                   std::map<string, int>
#define  pb                     push_back
#define  ll                     long long int
#define  ld                     long double
#define  ull                    unsigned long long int
#define  min3(a,b,c)            min(a,min(b,c))
#define  min4(a,b,c,d)          min(d,min(a,min(b,c)))
#define  max3(a,b,c)            max(a,max(b,c))
#define  max4(a,b,c,d)          max(d,max(a,max(b,c)))
#define  nl                     printf("\n");
#define  no                     printf("No");
#define  yes                    printf("Yes");
#define  F                      first
#define  S                      second
 
const int mod           = 1e9 + 7;
const int inf           = (int)2e9 + 5;
const ll  Inf           = (ll)1e18 + 5;
const int N             = 1e6 + 5;
const int nn           = 2e5 + 5;

class building
{
    int rooms;
    int floors;
    int area;
public:
    void set_rooms(int num);
    int get_rooms();
    void set_floors(int num);
    int get_floors();
    void set_area(int num);
    int get_area();
    
};
//house is drived from building
class house: public building{
    int bedrooms;
    int baths;
public:
    void set_bedrooms(int num);
    int get_bedrooms();
    void set_baths(int num);
    int get_baths();
};
//school is also drived from building 
class school : public building{
    int classrooms;
    int offices;
public:
    void set_clasrooms(int num);
    int get_classrooms();
    void set_offices(int num);
    int get_offices();
};
//set building 
void building :: set_rooms(int num){
    rooms = num;
}
void building :: set_floors(int num){
    floors = num;
}
void building :: set_area(int num){
    area = num;
}
// get building
int building :: get_rooms(){
    return rooms;
}
int building :: get_floors(){
    return floors;
}
int building :: get_area(){
    return area;
}
//set house
void house :: set_bedrooms(int num){
    bedrooms = num;
}
void house:: set_baths(int num){
    baths = num;
}
//get house
int house::get_bedrooms(){
    return bedrooms;
}
int house :: get_baths(){
    return baths;
}
//set school
void school::set_clasrooms(int num){
    classrooms = num;
}
void school :: set_offices(int num){
    offices = num;
}
//get school
int school ::get_classrooms(){
    return classrooms;
}

int school :: get_offices(){
    return offices;
}
 
int solve() {

    house h;
    school s;

    h.set_rooms(12);
    h.set_floors(3);
    h.set_area(4500);
    h.set_bedrooms(5);
    h.set_baths(3);

    cout<<"house has "<< h.get_bedrooms();
    cout<<" bedrooms\n";
    cout<<"room number : "<<h.get_rooms()<<endl;

    s.set_rooms(200);
    s.set_clasrooms(180);
    s.set_offices(5);
    s.set_area(25000);

    cout<<"school has "<< s.get_classrooms();
    cout<<" classrooms\n";
    cout<<"it's area is "<<s.get_area();
    cout<<endl;

    return 0; 

}
 
int main()
{
    int test = 1, tc = 0;
    //scanf("%d", &test);
   // (void)getchar();
    //cin >> test;
    while (test--) {
        //printf("Case %d: ", ++tc);
        solve();
    }
 
    return 0;
}
